//
// StackTest
//
//push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D-M
@TRUE.StackTest$0
D;JEQ
D=0
@ENDIF.StackTest$0
0;JMP
(TRUE.StackTest$0)
D=-1
(ENDIF.StackTest$0)
@SP
A=M
M=D
@SP
M=M+1
//push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D-M
@TRUE.StackTest$1
D;JEQ
D=0
@ENDIF.StackTest$1
0;JMP
(TRUE.StackTest$1)
D=-1
(ENDIF.StackTest$1)
@SP
A=M
M=D
@SP
M=M+1
//push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D-M
@TRUE.StackTest$2
D;JEQ
D=0
@ENDIF.StackTest$2
0;JMP
(TRUE.StackTest$2)
D=-1
(ENDIF.StackTest$2)
@SP
A=M
M=D
@SP
M=M+1
//push constant 892
@892
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D-M
@TRUE.StackTest$3
D;JGT
D=0
@ENDIF.StackTest$3
0;JMP
(TRUE.StackTest$3)
D=-1
(ENDIF.StackTest$3)
@SP
A=M
M=D
@SP
M=M+1
//push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 892
@892
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D-M
@TRUE.StackTest$4
D;JGT
D=0
@ENDIF.StackTest$4
0;JMP
(TRUE.StackTest$4)
D=-1
(ENDIF.StackTest$4)
@SP
A=M
M=D
@SP
M=M+1
//push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D-M
@TRUE.StackTest$5
D;JGT
D=0
@ENDIF.StackTest$5
0;JMP
(TRUE.StackTest$5)
D=-1
(ENDIF.StackTest$5)
@SP
A=M
M=D
@SP
M=M+1
//push constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D-M
@TRUE.StackTest$6
D;JLT
D=0
@ENDIF.StackTest$6
0;JMP
(TRUE.StackTest$6)
D=-1
(ENDIF.StackTest$6)
@SP
A=M
M=D
@SP
M=M+1
//push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D-M
@TRUE.StackTest$7
D;JLT
D=0
@ENDIF.StackTest$7
0;JMP
(TRUE.StackTest$7)
D=-1
(ENDIF.StackTest$7)
@SP
A=M
M=D
@SP
M=M+1
//push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D-M
@TRUE.StackTest$8
D;JLT
D=0
@ENDIF.StackTest$8
0;JMP
(TRUE.StackTest$8)
D=-1
(ENDIF.StackTest$8)
@SP
A=M
M=D
@SP
M=M+1
//push constant 57
@57
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 31
@31
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 53
@53
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
M=D+M
@SP
M=M+1
//push constant 112
@112
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
M=M-D
@SP
M=M+1
//neg
@SP
M=M-1
A=M
M=-M
@SP
M=M+1
//and
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
M=D&M
@SP
M=M+1
//push constant 82
@82
D=A
@SP
A=M
M=D
@SP
M=M+1
//or
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
M=D|M
@SP
M=M+1
//not
@SP
M=M-1
A=M
M=!M
@SP
M=M+1
// infinite loop
(END)
@END
0;JMP
